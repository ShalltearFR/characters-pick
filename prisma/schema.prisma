generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id
  name          String
  email         String      @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  hsrData       HSRData?    @relation("UserHSRData")
  wuwaData      WuwaData?   @relation("UserWuwaData")

  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String   @id
  accountId             String
  providerId            String
  userId                String
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model HSRData {
  id       String   @id @default(uuid())
  data     String[]
  options  Json
  userId   String   @unique
  user     User     @relation("UserHSRData", fields: [userId], references: [id], onDelete: Cascade)

  @@map("hsr_data")
}

model WuwaData {
  id       String   @id @default(uuid())
  data     String[]
  options  Json
  userId   String   @unique
  user     User     @relation("UserWuwaData", fields: [userId], references: [id], onDelete: Cascade)

  @@map("wuwa_data")
}
